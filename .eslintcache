[{"C:\\Users\\Scot\\weather-app\\src\\index.js":"1","C:\\Users\\Scot\\weather-app\\src\\App.js":"2","C:\\Users\\Scot\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\index.js":"4","C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\Header\\Header.js":"5","C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\Body\\Body.js":"6","C:\\Users\\Scot\\weather-app\\src\\utils\\common.js":"7","C:\\Users\\Scot\\weather-app\\src\\api\\weatherservice.js":"8","C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\DailyCard.js":"9"},{"size":590,"mtime":1616727811548,"results":"10","hashOfConfig":"11"},{"size":198,"mtime":1616727835539,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":104,"mtime":1616707655422,"results":"14","hashOfConfig":"11"},{"size":137,"mtime":1616648907071,"results":"15","hashOfConfig":"11"},{"size":6260,"mtime":1616731263178,"results":"16","hashOfConfig":"11"},{"size":2161,"mtime":1616648901853,"results":"17","hashOfConfig":"11"},{"size":383,"mtime":1616729129728,"results":"18","hashOfConfig":"11"},{"size":1639,"mtime":1616648905465,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1riaiq6",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Users\\Scot\\weather-app\\src\\index.js",["42"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nfunction app ({ loaded }) {\r\n  if (!loaded) {\r\n    return null;\r\n  }\r\n}\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["43","44"],"C:\\Users\\Scot\\weather-app\\src\\App.js",[],"C:\\Users\\Scot\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\index.js",[],"C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\Header\\Header.js",[],"C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\Body\\Body.js",["45","46"],"import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  InputAdornment,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport { getCurrentPosition } from 'utils/common';\r\nimport { getWeather } from 'api/weatherservice';\r\nimport DailyCard from 'components/widgets/DailyCard';\r\nimport moment from 'moment';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\n\r\nconst Body = (props) => {\r\n  const [query, setQuery] = useState('');\r\n  const [daily, setDaily] = useState(null);\r\n  const [tempUnit, setTempUnit] = useState('C');\r\n  const [loading, setLoading] = useState(false);\r\n  const [locations, setLocations] = useState(null);\r\n  const [showLocations, setShowLocations] = useState(false);\r\n  const locationInput = useRef(null);\r\n\r\n  const doGetWeather = async (lat, lng) => {\r\n    const weather = await getWeather(lat, lng);\r\n    setDaily(weather.daily);\r\n  };\r\n\r\n  const onClick = async (lat, lng) => {\r\n    setLoading(true);\r\n    try {\r\n      if (!lat && !lng) {\r\n        const { latitude, longitude } = await getCurrentPosition();\r\n        doGetWeather(latitude, longitude);\r\n        setLoading(false);\r\n        setShowLocations(false);\r\n\r\n        return;\r\n      }\r\n      doGetWeather(lat, lng);\r\n      setLoading(false);\r\n      setShowLocations(false);\r\n\r\n    } catch (error) {}\r\n  };\r\n\r\n  const search = async (evt) => {\r\n    if (evt.key === 'Enter') {\r\n      try {\r\n        const response = await fetch(\r\n          `http://api.positionstack.com/v1/forward?access_key=03649c9ca4faa75a73e70c796162dab1&query=${query}`\r\n        );\r\n        const { data } = await response.json();\r\n        setLocations(data);\r\n        setShowLocations(true);\r\n        setQuery('');\r\n        return;\r\n      } catch (error) {\r\n        console.log({ error });\r\n      }\r\n    }\r\n  };\r\n  const renderWeek = () => {\r\n    return (\r\n      !!daily && daily.map((day) => <DailyCard day={day} unit={tempUnit} />)\r\n    );\r\n  };\r\n  const DATE_TIME_FORMAT = 'MMMM Do YYYY';\r\n  moment.unix(1608055200).format(DATE_TIME_FORMAT);\r\n  const renderLocations = () => {\r\n    return (\r\n      locations &&\r\n      locations.map((_location) => {\r\n        const { latitude, longitude } = _location;\r\n        return (\r\n          <MenuItem\r\n            onClick={() => onClick(latitude, longitude)}\r\n          >\r\n            {_location.label}\r\n          </MenuItem>\r\n        );\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          alignSelf: 'center',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n          opacity: 1,\r\n          opacityHover: 1,\r\n          margin: 0,\r\n          color: '#fff',\r\n          fontFamily: 'Roboto',\r\n          backgroundColor: 'rgba(0, 0, 40, 0.1)',\r\n        }}\r\n      >\r\n        <div\r\n          className=\"location\"\r\n          style={{ alignSelf: 'center', margin: 0, color: '#fff', paddingTop: '3rem' }}\r\n        >\r\n          <TextField\r\n            style={styles.searchBar}\r\n            className=\"search-bar\"\r\n            label=\"LOCATION\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Search...\"\r\n            onChange={({ target: { value } }) => setQuery(value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n            ref={locationInput}\r\n          />\r\n          <Menu style={{ color: '#fff ' }} open={showLocations} anchorEl={locationInput.current}>{renderLocations()}</Menu>\r\n        </div>\r\n        <FormControl\r\n          component=\"fieldset\"\r\n          style={{ alignSelf: 'center', margin: 10, color: '#fff' }}\r\n        >\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"temp-unit\"\r\n            name=\"temp-unit\"\r\n            defaultValue=\"F\"\r\n            onChange={({ target: { value } }) => setTempUnit(value)}\r\n            className=\"temp-unit\"\r\n          >\r\n            <FormControlLabel\r\n              value=\"F\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"F\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"C\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"C\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Button onClick={() => onClick()} style={styles.button}>\r\n          Find current location\r\n        </Button>\r\n      </div>\r\n      {!loading && <div className=\"Card-Container\">{renderWeek()}</div>}\r\n      {loading && <p>LOADING...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  searchBar: {\r\n    padding: '15px',\r\n    margin: 10,\r\n    boxShadow: 0,\r\n    boxShadowColor: 'rgba(255, 255, 255, 0.5)',\r\n    outline: 'none',\r\n    borderRadius: 16,\r\n    marginTop: -25,\r\n    textShadow: 3,\r\n    color: '#fff',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    opacity: 1,\r\n  },\r\n  button: {\r\n    alignSelf: 'center',\r\n    fontSize: 20,\r\n    fontWeight: 300,\r\n    textAlign: 'center',\r\n    textShadow: 3,\r\n    color: '#fff',\r\n    display: 'inline',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    borderRadius: 30,\r\n    fontFamily: 'Roboto',\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst CurrentLocationButton = (props) => {\r\n  const { location, setLocation, setWeather } = useContext(Location);\r\n  const { form, setLoading } = props;\r\n\r\n  const onClick = async () => {\r\n    const { address } = form;\r\n    if (address) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const { latitude, longitude } = await getCurrentPosition(setLocation);\r\n\r\n      const canGetWeather =\r\n        (latitude && longitude) || (location.latitude && location.longitude);\r\n      if (canGetWeather) {\r\n        const weatherResponse = await getWeather(\r\n          latitude ? latitude : location.latitude,\r\n          longitude ? longitude : location.longitude\r\n        );\r\n        setWeather(weatherResponse);\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <InputAdornment position=\"end\">\r\n      <IconButton\r\n        aria-label=\"use current location\"\r\n        onClick={onClick}\r\n        edge=\"end\"\r\n      >\r\n        <NearMeIcon />\r\n      </IconButton>\r\n    </InputAdornment>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n        ","C:\\Users\\Scot\\weather-app\\src\\utils\\common.js",[],"C:\\Users\\Scot\\weather-app\\src\\api\\weatherservice.js",[],"C:\\Users\\Scot\\weather-app\\src\\components\\widgets\\DailyCard.js",["47","48"],"import React from 'react';\r\nimport moment from 'moment'\r\n\r\nimport { temperature } from 'utils/common';\r\nconst DailyCard = props => {\r\n    const { day, unit } = props;\r\n    const { temp, weather } = day\r\n    const DATE_TIME_FORMAT = 'dddd MMM YYYY';\r\n    const iconurl = \"http://openweathermap.org/img/w/\" + `${weather[0].icon}` + \".png\"\r\n\r\n    return <div className=\"Daily-Card\">\r\n\r\n        <img src={iconurl} className=\"weather-icon\" alt=\"\" />\r\n        <div style={styles.container}>{temperature(temp.day, unit)}<sup>o</sup></div>\r\n        <div style={styles.date}>{moment.unix(day.dt).format(DATE_TIME_FORMAT)}</div>\r\n        <p>{weather[0].description}</p>\r\n        <div style={styles.minMax}>{temperature(temp.min, unit)}<sup>o</sup>/{temperature(temp.max, unit)}<sup>o</sup></div>\r\n\r\n\r\n\r\n    </div>\r\n};\r\nlet styles = {\r\n    container: {\r\n        position: 'realative',\r\n        display: 'inline-block',\r\n        margin: 10,\r\n        backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n        borderRadius: 16,\r\n\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n\r\n        color: '#fff',\r\n        fontSize: 102,\r\n        fontWeight: 900,\r\n\r\n        textShadow: \"rgba(50, 50, 70, 0.5)\",\r\n        textAlign: 'center',\r\n        paddingRight: 10,\r\n        paddingLeft: 10,\r\n    },\r\n    minMax: {\r\n        position: 'realative',\r\n        fontSize: 32,\r\n        fontWeight: 300,\r\n        textAlign: 'center',\r\n        textShadow: 3,\r\n    },\r\n    date: {\r\n        position: 'absoulte',\r\n        paddingHorizontal: 100,\r\n        fontSize: 30,\r\n        fontStyle: 'italic',\r\n        fontWeight: 300,\r\n    }\r\n}\r\nexport default DailyCard;",{"ruleId":"49","severity":1,"message":"50","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":13},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"57","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"58","line":186,"column":7,"nodeType":"51","messageId":"52","endLine":186,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":9,"column":56,"nodeType":"61","messageId":"62","endLine":9,"endColumn":57},{"ruleId":"59","severity":1,"message":"60","line":9,"column":79,"nodeType":"61","messageId":"62","endLine":9,"endColumn":80},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'useEffect' is defined but never used.","'CurrentLocationButton' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]